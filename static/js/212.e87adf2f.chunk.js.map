{"version":3,"file":"static/js/212.e87adf2f.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Pages/Users/User/UserCSS.module.css?4dcc","components/Pages/Users/User/User.tsx","webpack://samurai-way/./src/components/ui/pagination/pagination.module.scss?fcee","components/ui/pagination/usePagination.tsx","components/ui/pagination/pagination.tsx","webpack://samurai-way/./src/components/ui/select/select.module.scss?6926","components/ui/select/select.tsx","webpack://samurai-way/./src/components/Pages/Users/Users.module.scss?e4b5","components/Pages/Users/Users.tsx","app/selectors/users-selector.ts","components/Pages/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"usersPhoto\":\"UserCSS_usersPhoto__aFcB-\"};","import React from 'react'\r\nimport s from './UserCSS.module.css'\r\nimport userPhoto from '../../../../assets/img/user.png'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { UserType } from '../user-reducer/users-reducer'\r\nimport { Button } from '../../../ui/button'\r\n\r\nexport const User: React.FC<UserPropsType> = (props) => {\r\n  const { user, followingInProgress, followUsers, unFollowUsers } = props\r\n\r\n  const changeFollow = (userId: number) => followUsers(userId)\r\n  const changeUnFollow = (userId: number) => unFollowUsers(userId)\r\n\r\n  return (\r\n    <div>\r\n      <span>\r\n        <div>\r\n          <NavLink to={`/profile/${user.id}`}>\r\n            <img\r\n              src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n              alt={'avatar'}\r\n              className={s.usersPhoto}\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {user.followed ? (\r\n            <Button\r\n              variant={'secondary'}\r\n              disabled={followingInProgress.some((id) => id === user.id)}\r\n              onClick={() => changeUnFollow(user.id)}\r\n            >\r\n              Unfollow\r\n            </Button>\r\n          ) : (\r\n            <Button disabled={followingInProgress.some((id) => id === user.id)} onClick={() => changeFollow(user.id)}>\r\n              Follow\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </span>\r\n      <span>\r\n        <span>\r\n          <div>{user.name}</div>\r\n          <div>{user.status}</div>\r\n        </span>\r\n        <span>\r\n          <div>{'el.location.country'}</div>\r\n          <div>{'el.location.city'}</div>\r\n        </span>\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\n//Types\r\ntype UserPropsType = {\r\n  user: UserType\r\n  followingInProgress: number[]\r\n  followUsers: (userId: number) => void\r\n  unFollowUsers: (userId: number) => void\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pagination_root__38UoB\",\"container\":\"pagination_container__doC9+\",\"item\":\"pagination_item__ARaoj\",\"selected\":\"pagination_selected__V2w+U\",\"dots\":\"pagination_dots__YSL5g\",\"icon\":\"pagination_icon__8FiJh\",\"selectBox\":\"pagination_selectBox__EXUDF\",\"select\":\"pagination_select__Soif4\"};","import { useCallback, useMemo } from 'react'\r\n\r\n// original code: https://www.freecodecamp.org/news/build-a-custom-pagination-component-in-react/\r\n\r\nconst range = (start: number, end: number) => {\r\n  let length = end - start + 1\r\n\r\n  /*\r\n  \tCreate an array of certain length and set the elements within it from\r\n    start value to end value.\r\n  */\r\n  return Array.from({ length }, (_, idx) => idx + start)\r\n}\r\n\r\nconst DOTS = '...'\r\n\r\ntype UsePaginationPropsType = {\r\n  count: number\r\n  siblings?: number\r\n  page: number\r\n  onChange: (pageNumber: number) => void\r\n}\r\n\r\ntype PaginationRange = (number | '...')[]\r\n\r\nexport const usePagination = ({\r\n  count = 1,\r\n  siblings = 1,\r\n  page = 1,\r\n  onChange,\r\n}: UsePaginationPropsType) => {\r\n  const paginationRange = useMemo(() => {\r\n    // Pages count is determined as siblingCount + firstPage + lastPage + page + 2*DOTS\r\n    const totalPageNumbers = siblings + 5\r\n\r\n    /*\r\n      Case 1:\r\n      If the number of pages is less than the page numbers we want to show in our\r\n      paginationComponent, we return the range [1..totalPageCount]\r\n    */\r\n    if (totalPageNumbers >= count) {\r\n      return range(1, count)\r\n    }\r\n\r\n    /*\r\n    \tCalculate left and right sibling index and make sure they are within range 1 and totalPageCount\r\n    */\r\n    const leftSiblingIndex = Math.max(page - siblings, 1)\r\n    const rightSiblingIndex = Math.min(page + siblings, count)\r\n\r\n    /*\r\n      We do not show dots when there is only one page number to be inserted\r\n      between the extremes of siblings and the page limits i.e 1 and totalPageCount.\r\n      Hence, we are using leftSiblingIndex > 2 and rightSiblingIndex < totalPageCount - 2\r\n    */\r\n    const shouldShowLeftDots = leftSiblingIndex > 2\r\n    const shouldShowRightDots = rightSiblingIndex < count - 2\r\n\r\n    const firstPageIndex = 1\r\n    const lastPageIndex = count\r\n\r\n    /*\r\n    \tCase 2: No left dots to show, but rights dots to be shown\r\n    */\r\n    if (!shouldShowLeftDots && shouldShowRightDots) {\r\n      let leftItemCount = 3 + 2 * siblings\r\n      let leftRange = range(1, leftItemCount)\r\n\r\n      return [...leftRange, DOTS, count]\r\n    }\r\n\r\n    /*\r\n    \tCase 3: No right dots to show, but left dots to be shown\r\n    */\r\n    if (shouldShowLeftDots && !shouldShowRightDots) {\r\n      let rightItemCount = 3 + 2 * siblings\r\n      let rightRange = range(count - rightItemCount + 1, count)\r\n\r\n      return [firstPageIndex, DOTS, ...rightRange]\r\n    }\r\n\r\n    /*\r\n    \tCase 4: Both left and right dots to be shown\r\n    */\r\n    if (shouldShowLeftDots && shouldShowRightDots) {\r\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex)\r\n\r\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex]\r\n    }\r\n  }, [siblings, page, count]) as PaginationRange\r\n\r\n  const lastPage = paginationRange?.[paginationRange.length - 1] ?? 1\r\n  const isFirstPage = page === 1\r\n  const isLastPage = page === lastPage\r\n\r\n  const handleNextPageClicked = useCallback(() => {\r\n    onChange(page + 1)\r\n  }, [page, onChange])\r\n\r\n  const handlePreviousPageClicked = useCallback(() => {\r\n    onChange(page - 1)\r\n  }, [page, onChange])\r\n\r\n  function handleMainPageClicked(pageNumber: number) {\r\n    return () => onChange(pageNumber)\r\n  }\r\n\r\n  return {\r\n    paginationRange: paginationRange || [],\r\n    isFirstPage,\r\n    isLastPage,\r\n    handleMainPageClicked,\r\n    handleNextPageClicked,\r\n    handlePreviousPageClicked,\r\n  }\r\n}\r\n","import { FC } from 'react'\r\n\r\nimport { clsx } from 'clsx'\r\n\r\nimport s from './pagination.module.scss'\r\n\r\nimport { ArrowLeft, ArrowRight } from '../../../assets'\r\nimport { usePagination } from './usePagination'\r\n\r\ntype PaginationConditionals =\r\n  | {\r\n      perPage?: null\r\n      perPageOptions?: never\r\n      onPerPageChange?: never\r\n    }\r\n  | {\r\n      perPage: number\r\n      perPageOptions: number[]\r\n      onPerPageChange: (itemPerPage: number) => void\r\n    }\r\n\r\nexport type PaginationProps = {\r\n  count?: number\r\n  page: number\r\n  onChange: (page: number) => void\r\n  siblings?: number\r\n  perPage?: number\r\n  perPageOptions?: number[]\r\n  onPerPageChange?: (itemPerPage: number) => void\r\n} & PaginationConditionals\r\n\r\nconst classNames = {\r\n  root: s.root,\r\n  container: s.container,\r\n  selectBox: s.selectBox,\r\n  select: s.select,\r\n  item: s.item,\r\n  dots: s.dots,\r\n  icon: s.icon,\r\n  pageButton(selected?: boolean) {\r\n    return clsx(this.item, selected && s.selected)\r\n  },\r\n}\r\n\r\nexport const Pagination: FC<PaginationProps> = ({ onChange, count = 10, page = 1, siblings }) => {\r\n  const {\r\n    paginationRange,\r\n    isLastPage,\r\n    isFirstPage,\r\n    handlePreviousPageClicked,\r\n    handleNextPageClicked,\r\n    handleMainPageClicked,\r\n  } = usePagination({\r\n    page,\r\n    count,\r\n    onChange,\r\n    siblings,\r\n  })\r\n\r\n  return (\r\n    <div className={classNames.root}>\r\n      <div className={classNames.container}>\r\n        <PrevButton onClick={handlePreviousPageClicked} disabled={isFirstPage} />\r\n\r\n        <MainPaginationButtons currentPage={page} onClick={handleMainPageClicked} paginationRange={paginationRange} />\r\n\r\n        <NextButton onClick={handleNextPageClicked} disabled={isLastPage} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\ntype NavigationButtonProps = {\r\n  onClick: () => void\r\n  disabled?: boolean\r\n}\r\n\r\ntype PageButtonProps = NavigationButtonProps & {\r\n  page: number\r\n  selected: boolean\r\n}\r\n\r\nconst Dots: FC = () => {\r\n  return <span className={classNames.dots}>&#8230;</span>\r\n}\r\nconst PageButton: FC<PageButtonProps> = ({ onClick, disabled, selected, page }) => {\r\n  return (\r\n    <button onClick={onClick} disabled={selected || disabled} className={classNames.pageButton(selected)}>\r\n      {page}\r\n    </button>\r\n  )\r\n}\r\nconst PrevButton: FC<NavigationButtonProps> = ({ onClick, disabled }) => {\r\n  return (\r\n    <button className={classNames.item} onClick={onClick} disabled={disabled}>\r\n      <ArrowLeft className={classNames.icon} />\r\n    </button>\r\n  )\r\n}\r\n\r\nconst NextButton: FC<NavigationButtonProps> = ({ onClick, disabled }) => {\r\n  return (\r\n    <button className={classNames.item} onClick={onClick} disabled={disabled}>\r\n      <ArrowRight className={classNames.icon} />\r\n    </button>\r\n  )\r\n}\r\n\r\ntype MainPaginationButtonsProps = {\r\n  paginationRange: (number | string)[]\r\n  currentPage: number\r\n  onClick: (pageNumber: number) => () => void\r\n}\r\n\r\nconst MainPaginationButtons: FC<MainPaginationButtonsProps> = ({ paginationRange, currentPage, onClick }) => {\r\n  return (\r\n    <>\r\n      {paginationRange.map((page: number | string, index) => {\r\n        const isSelected = page === currentPage\r\n\r\n        if (typeof page !== 'number') {\r\n          return <Dots key={index} />\r\n        }\r\n\r\n        return <PageButton key={index} page={page} selected={isSelected} onClick={onClick(page)} />\r\n      })}\r\n    </>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"select_label__qd9I0\",\"labelDisabled\":\"select_labelDisabled__jr8oX\",\"icon\":\"select_icon__kk1b6\",\"trigger\":\"select_trigger__H9z8W\",\"triggerDisabled\":\"select_triggerDisabled__Rkqi6\",\"iconDisabled\":\"select_iconDisabled__zQXqR\",\"content\":\"select_content__QgTLZ\",\"item\":\"select_item__-hfji\"};","import { FC, ReactNode } from 'react'\r\n\r\nimport * as Label from '@radix-ui/react-label'\r\nimport * as Select from '@radix-ui/react-select'\r\n\r\nimport { SelectArrow } from '../../../assets'\r\nimport { Typography } from '../typography'\r\n\r\nimport s from './select.module.scss'\r\n\r\nexport type SelectPropsType = {\r\n  label?: string\r\n  placeholder?: ReactNode\r\n  value?: string\r\n  onValueChange?: (value: any) => void\r\n  defaultValue?: any\r\n  options: any[]\r\n  disabled?: boolean\r\n  required?: boolean\r\n  classname?: string\r\n}\r\n\r\nexport const SuperSelect: FC<SelectPropsType> = ({\r\n  label,\r\n  placeholder,\r\n  value,\r\n  onValueChange,\r\n  defaultValue,\r\n  options,\r\n  disabled,\r\n  required,\r\n  classname,\r\n}) => (\r\n  <Label.Root>\r\n    <Typography variant={'body2'} as={'label'} className={`${s.label} ${disabled && s.labelDisabled}`}>\r\n      {label}\r\n    </Typography>\r\n    <Select.Root\r\n      defaultValue={defaultValue}\r\n      value={value}\r\n      onValueChange={onValueChange}\r\n      disabled={disabled}\r\n      required={required}\r\n    >\r\n      <Select.Trigger className={`${disabled ? s.triggerDisabled : s.trigger} ${classname}`} asChild tabIndex={1}>\r\n        <div>\r\n          <Select.Value placeholder={placeholder} />\r\n          <SelectArrow className={disabled ? s.iconDisabled : s.icon} />\r\n        </div>\r\n      </Select.Trigger>\r\n      <Select.Portal>\r\n        <Select.Content position={'popper'} className={s.content} sideOffset={-1}>\r\n          <Select.Viewport>\r\n            {options.map((el) => (\r\n              <Select.Item key={el.value} value={el.value} className={s.item}>\r\n                <Select.ItemText>{el.value}</Select.ItemText>\r\n              </Select.Item>\r\n            ))}\r\n          </Select.Viewport>\r\n        </Select.Content>\r\n      </Select.Portal>\r\n    </Select.Root>\r\n  </Label.Root>\r\n)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Users_pagination__OoIO9\",\"selectPagination\":\"Users_selectPagination__V8RtS\"};","import React from 'react'\r\nimport { UsersAPIComponentType } from './UsersContainer'\r\nimport { User } from './User/User'\r\nimport { Pagination } from '../../ui/pagination'\r\nimport { Typography } from '../../ui/typography'\r\nimport { SuperSelect } from '../../ui/select'\r\nimport s from './Users.module.scss'\r\n\r\nexport const Users: React.FC<UsersPropsType> = (props) => {\r\n  const {\r\n    totalUsersCount,\r\n    pageSize,\r\n    currentPage,\r\n    users,\r\n    followingInProgress,\r\n    onPageChanged,\r\n    followUsers,\r\n    unFollowUsers,\r\n    options,\r\n    onSetPerPage,\r\n  } = props\r\n\r\n  const pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n  const mappedUsers = users.map((u) => (\r\n    <User\r\n      key={u.id}\r\n      user={u}\r\n      followUsers={followUsers}\r\n      unFollowUsers={unFollowUsers}\r\n      followingInProgress={followingInProgress}\r\n    />\r\n  ))\r\n\r\n  return (\r\n    <div>\r\n      {/*<Pagination*/}\r\n      {/*  pageSize={pageSize}*/}\r\n      {/*  totalItemsCount={totalUsersCount}*/}\r\n      {/*  currentPage={currentPage}*/}\r\n      {/*  onPageChanged={onPageChanged}*/}\r\n      {/*  portionSize={10}*/}\r\n      {/*/>*/}\r\n      <div className={s.pagination}>\r\n        <Pagination count={pagesCount} page={currentPage} onChange={onPageChanged} />\r\n        <Typography variant={'body2'}>Показать</Typography>\r\n        <SuperSelect\r\n          options={options}\r\n          // value={`${pageSize}`}\r\n          defaultValue={pageSize}\r\n          onValueChange={onSetPerPage}\r\n          classname={s.selectPagination}\r\n        />\r\n        <Typography variant={'body2'}>На странице</Typography>\r\n      </div>\r\n\r\n      {mappedUsers}\r\n    </div>\r\n  )\r\n}\r\n\r\n//Types\r\ntype UsersProps = {\r\n  onPageChanged: (pageNumber: number) => void\r\n  onSetPerPage: (value: number) => void\r\n}\r\ntype UsersPropsType = UsersProps & UsersAPIComponentType\r\n","import { RootReducerType } from '../store'\r\n\r\nexport const getUsers = (state: RootReducerType) => state.usersReducer.users\r\nexport const getPageSize = (state: RootReducerType) => state.usersReducer.pageSize\r\nexport const getTotalUsersCount = (state: RootReducerType) => state.usersReducer.totalUsersCount\r\nexport const getCurrentPage = (state: RootReducerType) => state.usersReducer.currentPage\r\nexport const getIsFetching = (state: RootReducerType) => state.usersReducer.isFetching\r\nexport const getFollowingInProgress = (state: RootReducerType) => state.usersReducer.followingInProgress\r\nexport const getOptions = (state: RootReducerType) => state.usersReducer.paginationOptions\r\n","import React, { ComponentType } from 'react'\r\nimport { RootReducerType } from '../../../app/store'\r\nimport { connect } from 'react-redux'\r\nimport { followUsers, requestUsers, unFollowUsers, userActions, UserType } from './user-reducer/users-reducer'\r\nimport { Users } from './Users'\r\nimport { Preloader } from '../../common/Preloader/Preloader'\r\nimport { compose } from 'redux'\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getOptions,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getUsers,\r\n} from '../../../app/selectors/users-selector'\r\nimport { getIsAuth } from '../../../app/selectors/auth-selector'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst {\r\n  follow,\r\n  unFollow,\r\n  setUsers,\r\n  setCurrentPage,\r\n  setUsersTotalCount,\r\n  toggleIsFetching,\r\n  toggleFollowingProgress,\r\n  setPerPage,\r\n} = userActions\r\n\r\nexport class UsersAPIComponent extends React.Component<UsersAPIComponentType> {\r\n  componentDidMount() {\r\n    const { currentPage, pageSize } = this.props\r\n    this.props.requestUsers(currentPage, pageSize)\r\n  }\r\n\r\n  onPageChanged = (pageNumber: number) => {\r\n    const { pageSize } = this.props\r\n    this.props.requestUsers(pageNumber, pageSize)\r\n  }\r\n\r\n  onSetPerPage = (value: number) => {\r\n    const { currentPage } = this.props\r\n    this.props.setPerPage(value)\r\n    this.props.requestUsers(currentPage, value)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n    return this.props.isFetching ? (\r\n      <Preloader />\r\n    ) : (\r\n      <Users {...this.props} onPageChanged={this.onPageChanged} onSetPerPage={this.onSetPerPage} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootReducerType): MapStateToPropsType => {\r\n  return {\r\n    isAuth: getIsAuth(state),\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n    options: getOptions(state),\r\n  }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unFollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setUsersTotalCount,\r\n    toggleIsFetching,\r\n    toggleFollowingProgress,\r\n    requestUsers,\r\n    followUsers,\r\n    unFollowUsers,\r\n    setPerPage,\r\n  }),\r\n)(UsersAPIComponent)\r\n//Types\r\ntype MapDispatchToPropsType = {\r\n  follow: (userId: number) => void\r\n  unFollow: (userId: number) => void\r\n  setUsers: (users: UserType[]) => void\r\n  setCurrentPage: (currentPage: number) => void\r\n  setUsersTotalCount: (totalUsersCount: number) => void\r\n  toggleIsFetching: (isFetching: boolean) => void\r\n  toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n  requestUsers: (currentPage: number, pageSize: number) => void\r\n  followUsers: (userId: number) => void\r\n  unFollowUsers: (userId: number) => void\r\n  setPerPage: (value: number) => void\r\n}\r\ntype MapStateToPropsType = {\r\n  isAuth: boolean\r\n  users: UserType[]\r\n  pageSize: number\r\n  totalUsersCount: number\r\n  currentPage: number\r\n  isFetching: boolean\r\n  followingInProgress: number[]\r\n  options: { value: number }[]\r\n}\r\nexport type UsersAPIComponentType = MapStateToPropsType & MapDispatchToPropsType\r\n"],"names":["User","props","user","followingInProgress","followUsers","unFollowUsers","_jsxs","children","_jsx","NavLink","to","concat","id","src","photos","small","userPhoto","alt","className","s","followed","Button","variant","disabled","some","onClick","userId","name","status","range","start","end","length","Array","from","_","idx","DOTS","classNames","root","container","selectBox","select","item","dots","icon","pageButton","selected","clsx","this","Pagination","_ref","onChange","_ref$count","count","_ref$page","page","_usePagination","_paginationRange","_ref$siblings","siblings","paginationRange","useMemo","leftSiblingIndex","Math","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","_toConsumableArray","rightRange","middleRange","lastPage","isFirstPage","isLastPage","handleMainPageClicked","pageNumber","handleNextPageClicked","useCallback","handlePreviousPageClicked","usePagination","PrevButton","MainPaginationButtons","currentPage","NextButton","Dots","PageButton","_ref2","_ref3","ArrowLeft","_ref4","ArrowRight","_ref5","_Fragment","map","index","isSelected","SuperSelect","label","placeholder","value","onValueChange","defaultValue","options","required","classname","Label","Typography","as","Select","asChild","tabIndex","SelectArrow","position","sideOffset","el","Users","totalUsersCount","pageSize","users","onPageChanged","onSetPerPage","pagesCount","ceil","mappedUsers","u","getUsers","state","usersReducer","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","getOptions","paginationOptions","follow","userActions","unFollow","setUsers","setCurrentPage","setUsersTotalCount","toggleIsFetching","toggleFollowingProgress","setPerPage","UsersAPIComponent","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","_key","call","apply","requestUsers","_createClass","key","_this$props","isAuth","Preloader","_objectSpread","Redirect","React","compose","connect","getIsAuth"],"sourceRoot":""}