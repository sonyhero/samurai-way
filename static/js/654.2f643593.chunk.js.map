{"version":3,"file":"static/js/654.2f643593.chunk.js","mappings":"wKACA,EAA6B,4BAA7B,EAAmE,yBAAnE,EAAuG,0BAAvG,EAAgJ,8B,UCAhJ,EAAuB,0BAAvB,EAA8D,gC,UCGjDA,EAAa,SAACC,GACzB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOC,UACrBH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAIP,EAAMQ,gBAAiBJ,EAAaC,SAC9CN,EAAMU,QAIf,ECXaC,EAAU,SAACX,GACtB,OAAOG,EAAAA,EAAAA,KAAA,OAAAG,SAAMN,EAAMY,aACrB,E,kDCEMC,GAAeC,EAAAA,EAAAA,IAAU,KACzBC,GAAaC,EAAAA,EAAAA,IAAU,GAiBhBC,GAAsBC,EAAAA,EAAAA,GAAkC,CAAEC,KAAM,cAA1CD,EAfgD,SAAClB,GAClF,OACEoB,EAAAA,EAAAA,MAAA,QAAMC,SAAUrB,EAAMsB,aAAahB,SAAA,EACjCH,EAAAA,EAAAA,KAACoB,EAAAA,EAAK,CACJb,KAAM,cACNc,YAAa,gBACbC,MAAO,iBACPC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,GAAUhB,EAAcE,MAErCZ,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAAAxB,SAAC,kBAGd,I,oBCaA,GAAeyB,E,QAAAA,IA1BK,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,KAAe,SAACC,GAAK,OAAKA,EAAMC,cAAc,IAE5DC,EAAiBJ,EAAYK,QAAQC,KAAI,SAACC,GAAC,OAAKtC,EAAAA,EAAAA,KAACJ,EAAU,CAAYW,KAAM+B,EAAE/B,KAAMR,GAAIuC,EAAEvC,IAA1BuC,EAAEvC,GAA8B,IAEjGwC,EAAkBR,EAAYS,SAASH,KAAI,SAACI,GAAC,OAAKzC,EAAAA,EAAAA,KAACQ,EAAO,CAAYC,YAAagC,EAAEhC,YAAaV,GAAI0C,EAAE1C,IAAxC0C,EAAE1C,GAA4C,IAMpH,OACEkB,EAAAA,EAAAA,MAAA,OAAKhB,UAAWC,EAAaC,SAAA,CAAC,WAE5Bc,EAAAA,EAAAA,MAAA,OAAKhB,UAAWC,EAAUC,SAAA,EACxBc,EAAAA,EAAAA,MAAA,OAAKhB,UAAWC,EAAWC,SAAA,CACxBoC,GACDvC,EAAAA,EAAAA,KAACc,EAAmB,CAACI,SAVR,SAACwB,GACpBb,GAASc,EAAAA,EAAAA,GAAWD,EAAKjC,aAC3B,QAUMT,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,SAAEgC,SAIzC,G","sources":["webpack://samurai-way/./src/components/Pages/Dialogs/ui/Dialogs.module.scss?eb09","webpack://samurai-way/./src/components/Pages/Dialogs/ui/DialogItem/DialogsItem.module.scss?f94b","components/Pages/Dialogs/ui/DialogItem/DialogsItem.tsx","components/Pages/Dialogs/ui/Message/Message.tsx","components/Pages/Dialogs/ui/AddDialogsMessageForm/AddDialogsMessageForm.tsx","components/Pages/Dialogs/ui/DialogsPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogsBox\":\"Dialogs_dialogsBox__o5rHb\",\"dialogs\":\"Dialogs_dialogs__rx+Qq\",\"messages\":\"Dialogs_messages__Wp3SS\",\"dialogsItems\":\"Dialogs_dialogsItems__RcRXe\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DialogsItem_item__kdNHA\",\"activeLink\":\"DialogsItem_activeLink__XVjcj\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './DialogsItem.module.scss'\r\n\r\nexport const DialogItem = (props: DialogItemType) => {\r\n  let path = '/dialogs/' + props.id\r\n  return (\r\n    <div className={s.item}>\r\n      <NavLink to={path} activeClassName={s.activeLink}>\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\n//Types\r\ntype DialogItemType = {\r\n  id: number\r\n  name: string\r\n}\r\n","import React from 'react'\r\n\r\nexport const Message = (props: MessageType) => {\r\n  return <div>{props.messageText}</div>\r\n}\r\n\r\n//Types\r\ntype MessageType = {\r\n  id: number\r\n  messageText: string\r\n}\r\n","import React from 'react'\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\nimport { TextArea } from '../../../../forms-controls/FormsControl'\nimport { maxLength, minLength, required } from '../../../../../utils/validators'\nimport { Button } from '../../../../ui/button'\n\nconst maxLength100 = maxLength(100)\nconst minLength1 = minLength(1)\n\nconst AddDialogsMessageForm: React.FC<InjectedFormProps<FormAddMessageDataType>> = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Field\n        name={'messageText'}\n        placeholder={'Enter message'}\n        value={'newMessageText'}\n        component={TextArea}\n        validate={[required, maxLength100, minLength1]}\n      />\n      <Button>Add message</Button>\n    </form>\n  )\n}\n\nexport const AddMessageReduxForm = reduxForm<FormAddMessageDataType>({ form: 'addMessage' })(AddDialogsMessageForm)\n\n//Types\ntype FormAddMessageDataType = {\n  messageText: string\n}\n","import React from 'react'\nimport s from './Dialogs.module.scss'\nimport { DialogItem } from './DialogItem/DialogsItem'\nimport { Message } from './Message/Message'\nimport { AddMessageReduxForm } from './AddDialogsMessageForm/AddDialogsMessageForm'\nimport { useAppDispatch, useAppSelector } from '../../../../app/store'\nimport { addMessage } from '../model/dialogs-reducer'\nimport { withAuthRedirect } from '../../../../hoc/withAuthRedirect'\n\nconst DialogsPage = () => {\n  const dispatch = useAppDispatch()\n  const dialogsPage = useAppSelector((state) => state.dialogsReducer)\n\n  const dialogsDataMap = dialogsPage.dialogs.map((d) => <DialogItem key={d.id} name={d.name} id={d.id} />)\n\n  const messagesDataMap = dialogsPage.messages.map((m) => <Message key={m.id} messageText={m.messageText} id={m.id} />)\n\n  const onAddMessage = (data: { messageText: string }) => {\n    dispatch(addMessage(data.messageText))\n  }\n\n  return (\n    <div className={s.dialogsBox}>\n      Dialogs\n      <div className={s.dialogs}>\n        <div className={s.messages}>\n          {messagesDataMap}\n          <AddMessageReduxForm onSubmit={onAddMessage} />\n        </div>\n        <div className={s.dialogsItems}>{dialogsDataMap}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default withAuthRedirect(DialogsPage)\n"],"names":["DialogItem","props","path","id","_jsx","className","s","children","NavLink","to","activeClassName","name","Message","messageText","maxLength100","maxLength","minLength1","minLength","AddMessageReduxForm","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","placeholder","value","component","TextArea","validate","required","Button","withAuthRedirect","dispatch","useAppDispatch","dialogsPage","useAppSelector","state","dialogsReducer","dialogsDataMap","dialogs","map","d","messagesDataMap","messages","m","data","addMessage"],"sourceRoot":""}