{"version":3,"file":"static/js/176.6edb0be3.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Pages/Users/ui/User/User.module.scss?bd56","app/model/selectors/users-selector.ts","components/Pages/Users/ui/User/User.tsx","webpack://samurai-way/./src/components/ui/pagination/pagination.module.scss?fcee","components/ui/pagination/usePagination.tsx","components/ui/pagination/pagination.tsx","webpack://samurai-way/./src/components/ui/select/select.module.scss?6926","components/ui/select/select.tsx","webpack://samurai-way/./src/components/Pages/Users/ui/Users.module.scss?9a86","webpack://samurai-way/./src/components/Pages/Users/ui/UserSearchForm/UserSearchForm.module.scss?2ef2","components/Pages/Users/ui/UserSearchForm/UserSearchForm.tsx","components/Pages/Users/ui/Users.tsx","components/Pages/Users/ui/hooks/useUsers.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userBlock\":\"User_userBlock__na8kK\",\"linkBlock\":\"User_linkBlock__70C9G\",\"usersPhoto\":\"User_usersPhoto__NlFcY\",\"userDescription\":\"User_userDescription__Yh9XY\"};","import { RootReducerType } from '../../store'\r\n\r\nexport const getUsers = (state: RootReducerType) => state.usersReducer.users\r\nexport const getPageSize = (state: RootReducerType) => state.usersReducer.pageSize\r\nexport const getTotalUsersCount = (state: RootReducerType) => state.usersReducer.totalUsersCount\r\nexport const getCurrentPage = (state: RootReducerType) => state.usersReducer.currentPage\r\nexport const getIsFetching = (state: RootReducerType) => state.usersReducer.isFetching\r\nexport const getFollowingInProgress = (state: RootReducerType) => state.usersReducer.followingInProgress\r\nexport const getOptions = (state: RootReducerType) => state.usersReducer.paginationOptions\r\nexport const getUsersFilter = (state: RootReducerType) => state.usersReducer.filter\r\n","import React from 'react'\r\nimport s from './User.module.scss'\r\nimport userPhoto from '../../../../../assets/img/user.png'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { UserType } from '../../model/users-reducer'\r\nimport { Button } from '../../../../ui/button'\r\nimport { useAppSelector } from '../../../../../app/store'\r\nimport { getFollowingInProgress } from '../../../../../app/model/selectors/users-selector'\r\n\r\nexport const User: React.FC<UserPropsType> = (props) => {\r\n  const { user, followUsers, unFollowUsers } = props\r\n\r\n  const followingInProgress = useAppSelector(getFollowingInProgress)\r\n\r\n  const changeFollow = () => followUsers(user.id)\r\n  const changeUnFollow = () => unFollowUsers(user.id)\r\n\r\n  return (\r\n    <div className={s.userBlock}>\r\n      <div className={s.linkBlock}>\r\n        <NavLink to={`/profile/${user.id}`}>\r\n          <img\r\n            src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n            alt={'avatar'}\r\n            className={s.usersPhoto}\r\n          />\r\n        </NavLink>\r\n      </div>\r\n\r\n      {user.followed ? (\r\n        <Button\r\n          variant={'secondary'}\r\n          disabled={followingInProgress.some((id) => id === user.id)}\r\n          onClick={changeUnFollow}\r\n        >\r\n          Unfollow\r\n        </Button>\r\n      ) : (\r\n        <Button disabled={followingInProgress.some((id) => id === user.id)} onClick={changeFollow}>\r\n          Follow\r\n        </Button>\r\n      )}\r\n\r\n      <div className={s.userDescription}>\r\n        <div>{user.name}</div>\r\n        <div>{user.status}</div>\r\n        {/*<div>{user.location.country}</div>*/}\r\n        {/*<div>{user.location.city}</div>*/}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n//Types\r\ntype UserPropsType = {\r\n  user: UserType\r\n  followUsers: (userId: number) => void\r\n  unFollowUsers: (userId: number) => void\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pagination_root__38UoB\",\"container\":\"pagination_container__doC9+\",\"item\":\"pagination_item__ARaoj\",\"selected\":\"pagination_selected__V2w+U\",\"dots\":\"pagination_dots__YSL5g\",\"icon\":\"pagination_icon__8FiJh\",\"selectBox\":\"pagination_selectBox__EXUDF\",\"select\":\"pagination_select__Soif4\"};","import { useCallback, useMemo } from 'react'\r\n\r\n// original code: https://www.freecodecamp.org/news/build-a-custom-pagination-component-in-react/\r\n\r\nconst range = (start: number, end: number) => {\r\n  let length = end - start + 1\r\n\r\n  /*\r\n  \tCreate an array of certain length and set the elements within it from\r\n    start value to end value.\r\n  */\r\n  return Array.from({ length }, (_, idx) => idx + start)\r\n}\r\n\r\nconst DOTS = '...'\r\n\r\ntype UsePaginationPropsType = {\r\n  count: number\r\n  siblings?: number\r\n  page: number\r\n  onChange: (pageNumber: number) => void\r\n}\r\n\r\ntype PaginationRange = (number | '...')[]\r\n\r\nexport const usePagination = ({\r\n  count = 1,\r\n  siblings = 1,\r\n  page = 1,\r\n  onChange,\r\n}: UsePaginationPropsType) => {\r\n  const paginationRange = useMemo(() => {\r\n    // Pages count is determined as siblingCount + firstPage + lastPage + page + 2*DOTS\r\n    const totalPageNumbers = siblings + 5\r\n\r\n    /*\r\n      Case 1:\r\n      If the number of pages is less than the page numbers we want to show in our\r\n      paginationComponent, we return the range [1..totalPageCount]\r\n    */\r\n    if (totalPageNumbers >= count) {\r\n      return range(1, count)\r\n    }\r\n\r\n    /*\r\n    \tCalculate left and right sibling index and make sure they are within range 1 and totalPageCount\r\n    */\r\n    const leftSiblingIndex = Math.max(page - siblings, 1)\r\n    const rightSiblingIndex = Math.min(page + siblings, count)\r\n\r\n    /*\r\n      We do not show dots when there is only one page number to be inserted\r\n      between the extremes of siblings and the page limits i.e 1 and totalPageCount.\r\n      Hence, we are using leftSiblingIndex > 2 and rightSiblingIndex < totalPageCount - 2\r\n    */\r\n    const shouldShowLeftDots = leftSiblingIndex > 2\r\n    const shouldShowRightDots = rightSiblingIndex < count - 2\r\n\r\n    const firstPageIndex = 1\r\n    const lastPageIndex = count\r\n\r\n    /*\r\n    \tCase 2: No left dots to show, but rights dots to be shown\r\n    */\r\n    if (!shouldShowLeftDots && shouldShowRightDots) {\r\n      let leftItemCount = 3 + 2 * siblings\r\n      let leftRange = range(1, leftItemCount)\r\n\r\n      return [...leftRange, DOTS, count]\r\n    }\r\n\r\n    /*\r\n    \tCase 3: No right dots to show, but left dots to be shown\r\n    */\r\n    if (shouldShowLeftDots && !shouldShowRightDots) {\r\n      let rightItemCount = 3 + 2 * siblings\r\n      let rightRange = range(count - rightItemCount + 1, count)\r\n\r\n      return [firstPageIndex, DOTS, ...rightRange]\r\n    }\r\n\r\n    /*\r\n    \tCase 4: Both left and right dots to be shown\r\n    */\r\n    if (shouldShowLeftDots && shouldShowRightDots) {\r\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex)\r\n\r\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex]\r\n    }\r\n  }, [siblings, page, count]) as PaginationRange\r\n\r\n  const lastPage = paginationRange?.[paginationRange.length - 1] ?? 1\r\n  const isFirstPage = page === 1\r\n  const isLastPage = page === lastPage\r\n\r\n  const handleNextPageClicked = useCallback(() => {\r\n    onChange(page + 1)\r\n  }, [page, onChange])\r\n\r\n  const handlePreviousPageClicked = useCallback(() => {\r\n    onChange(page - 1)\r\n  }, [page, onChange])\r\n\r\n  function handleMainPageClicked(pageNumber: number) {\r\n    return () => onChange(pageNumber)\r\n  }\r\n\r\n  return {\r\n    paginationRange: paginationRange || [],\r\n    isFirstPage,\r\n    isLastPage,\r\n    handleMainPageClicked,\r\n    handleNextPageClicked,\r\n    handlePreviousPageClicked,\r\n  }\r\n}\r\n","import { FC } from 'react'\r\n\r\nimport { clsx } from 'clsx'\r\n\r\nimport s from './pagination.module.scss'\r\n\r\nimport { ArrowLeft, ArrowRight } from '../../../assets'\r\nimport { usePagination } from './usePagination'\r\n\r\ntype PaginationConditionals =\r\n  | {\r\n      perPage?: null\r\n      perPageOptions?: never\r\n      onPerPageChange?: never\r\n    }\r\n  | {\r\n      perPage: number\r\n      perPageOptions: number[]\r\n      onPerPageChange: (itemPerPage: number) => void\r\n    }\r\n\r\nexport type PaginationProps = {\r\n  count?: number\r\n  page: number\r\n  onChange: (page: number) => void\r\n  siblings?: number\r\n  perPage?: number\r\n  perPageOptions?: number[]\r\n  onPerPageChange?: (itemPerPage: number) => void\r\n} & PaginationConditionals\r\n\r\nconst classNames = {\r\n  root: s.root,\r\n  container: s.container,\r\n  selectBox: s.selectBox,\r\n  select: s.select,\r\n  item: s.item,\r\n  dots: s.dots,\r\n  icon: s.icon,\r\n  pageButton(selected?: boolean) {\r\n    return clsx(this.item, selected && s.selected)\r\n  },\r\n}\r\n\r\nexport const Pagination: FC<PaginationProps> = ({ onChange, count = 10, page = 1, siblings }) => {\r\n  const {\r\n    paginationRange,\r\n    isLastPage,\r\n    isFirstPage,\r\n    handlePreviousPageClicked,\r\n    handleNextPageClicked,\r\n    handleMainPageClicked,\r\n  } = usePagination({\r\n    page,\r\n    count,\r\n    onChange,\r\n    siblings,\r\n  })\r\n\r\n  return (\r\n    <div className={classNames.root}>\r\n      <div className={classNames.container}>\r\n        <PrevButton onClick={handlePreviousPageClicked} disabled={isFirstPage} />\r\n\r\n        <MainPaginationButtons currentPage={page} onClick={handleMainPageClicked} paginationRange={paginationRange} />\r\n\r\n        <NextButton onClick={handleNextPageClicked} disabled={isLastPage} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\ntype NavigationButtonProps = {\r\n  onClick: () => void\r\n  disabled?: boolean\r\n}\r\n\r\ntype PageButtonProps = NavigationButtonProps & {\r\n  page: number\r\n  selected: boolean\r\n}\r\n\r\nconst Dots: FC = () => {\r\n  return <span className={classNames.dots}>&#8230;</span>\r\n}\r\nconst PageButton: FC<PageButtonProps> = ({ onClick, disabled, selected, page }) => {\r\n  return (\r\n    <button onClick={onClick} disabled={selected || disabled} className={classNames.pageButton(selected)}>\r\n      {page}\r\n    </button>\r\n  )\r\n}\r\nconst PrevButton: FC<NavigationButtonProps> = ({ onClick, disabled }) => {\r\n  return (\r\n    <button className={classNames.item} onClick={onClick} disabled={disabled}>\r\n      <ArrowLeft className={classNames.icon} />\r\n    </button>\r\n  )\r\n}\r\n\r\nconst NextButton: FC<NavigationButtonProps> = ({ onClick, disabled }) => {\r\n  return (\r\n    <button className={classNames.item} onClick={onClick} disabled={disabled}>\r\n      <ArrowRight className={classNames.icon} />\r\n    </button>\r\n  )\r\n}\r\n\r\ntype MainPaginationButtonsProps = {\r\n  paginationRange: (number | string)[]\r\n  currentPage: number\r\n  onClick: (pageNumber: number) => () => void\r\n}\r\n\r\nconst MainPaginationButtons: FC<MainPaginationButtonsProps> = ({ paginationRange, currentPage, onClick }) => {\r\n  return (\r\n    <>\r\n      {paginationRange.map((page: number | string, index) => {\r\n        const isSelected = page === currentPage\r\n\r\n        if (typeof page !== 'number') {\r\n          return <Dots key={index} />\r\n        }\r\n\r\n        return <PageButton key={index} page={page} selected={isSelected} onClick={onClick(page)} />\r\n      })}\r\n    </>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"select_label__qd9I0\",\"labelDisabled\":\"select_labelDisabled__jr8oX\",\"icon\":\"select_icon__kk1b6\",\"trigger\":\"select_trigger__H9z8W\",\"triggerDisabled\":\"select_triggerDisabled__Rkqi6\",\"iconDisabled\":\"select_iconDisabled__zQXqR\",\"content\":\"select_content__QgTLZ\",\"item\":\"select_item__-hfji\"};","import { FC, ReactNode } from 'react'\r\n\r\nimport * as Label from '@radix-ui/react-label'\r\nimport * as Select from '@radix-ui/react-select'\r\n\r\nimport { SelectArrow } from '../../../assets'\r\nimport { Typography } from '../typography'\r\n\r\nimport s from './select.module.scss'\r\n\r\nexport type SelectPropsType = {\r\n  label?: string\r\n  placeholder?: ReactNode\r\n  value?: string\r\n  onValueChange?: (value: any) => void\r\n  defaultValue?: any\r\n  options: any[]\r\n  disabled?: boolean\r\n  required?: boolean\r\n  classname?: string\r\n}\r\n\r\nexport const SuperSelect: FC<SelectPropsType> = ({\r\n  label,\r\n  placeholder,\r\n  value,\r\n  onValueChange,\r\n  defaultValue,\r\n  options,\r\n  disabled,\r\n  required,\r\n  classname,\r\n}) => (\r\n  <Label.Root>\r\n    <Typography variant={'body2'} as={'label'} className={`${s.label} ${disabled && s.labelDisabled}`}>\r\n      {label}\r\n    </Typography>\r\n    <Select.Root\r\n      defaultValue={defaultValue}\r\n      value={value}\r\n      onValueChange={onValueChange}\r\n      disabled={disabled}\r\n      required={required}\r\n    >\r\n      <Select.Trigger className={`${disabled ? s.triggerDisabled : s.trigger} ${classname}`} asChild tabIndex={1}>\r\n        <div>\r\n          <Select.Value placeholder={placeholder} />\r\n          <SelectArrow className={disabled ? s.iconDisabled : s.icon} />\r\n        </div>\r\n      </Select.Trigger>\r\n      <Select.Portal>\r\n        <Select.Content position={'popper'} className={s.content} sideOffset={-1}>\r\n          <Select.Viewport>\r\n            {options.map((el) => (\r\n              <Select.Item key={el.value} value={el.value} className={s.item}>\r\n                <Select.ItemText>{el.value}</Select.ItemText>\r\n              </Select.Item>\r\n            ))}\r\n          </Select.Viewport>\r\n        </Select.Content>\r\n      </Select.Portal>\r\n    </Select.Root>\r\n  </Label.Root>\r\n)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"usersPageBlock\":\"Users_usersPageBlock__dQB+X\",\"pagination\":\"Users_pagination__u3eKM\",\"showOnPage\":\"Users_showOnPage__LYy6a\",\"selectPagination\":\"Users_selectPagination__R+UB7\",\"usersBlock\":\"Users_usersBlock__aiKAp\"};","// extracted by mini-css-extract-plugin\nexport default {\"userField\":\"UserSearchForm_userField__zNSV9\",\"input\":\"UserSearchForm_input__opzDj\",\"selectAndSearch\":\"UserSearchForm_selectAndSearch__-OgTr\",\"select\":\"UserSearchForm_select__ZZtFj\",\"content\":\"UserSearchForm_content__-r12o\"};","import s from './UserSearchForm.module.scss'\nimport { FC, memo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { getUsersFilter } from '../../../../../app/model/selectors/users-selector'\nimport { SearchFilterType } from '../../model/users-reducer'\nimport { Field, Formik } from 'formik'\nimport { TextField } from '../../../../ui/textfield'\nimport { Button } from '../../../../ui/button'\n\nconst options = [\n  { value: 'null', item: 'all' },\n  { value: 'true', item: 'only followed' },\n  { value: 'false', item: 'only unfollowed' },\n]\n\nexport const UserSearchForm: FC<PropsType> = memo(({ onFilterChange }) => {\n  const filter = useSelector(getUsersFilter)\n  const submit = (values: FormType, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\n    const filter: SearchFilterType = {\n      term: values.term,\n      friend: values.friend === 'null' ? null : values.friend === 'true',\n    }\n    onFilterChange(filter)\n    setSubmitting(false)\n  }\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={{ term: filter.term, friend: String(filter.friend) as FriendFormType }}\n      onSubmit={submit}\n    >\n      {({ values, handleSubmit, isSubmitting, handleChange }) => (\n        <form onSubmit={handleSubmit} className={s.userField}>\n          <TextField\n            className={s.input}\n            name={'term'}\n            onChange={handleChange}\n            value={values.term}\n            placeholder={'type to search...'}\n          />\n          <div className={s.selectAndSearch}>\n            <Field as=\"select\" name=\"friend\" className={s.select}>\n              {options.map((el) => (\n                <option key={el.value} value={el.value} className={s.content}>\n                  {el.item}\n                </option>\n              ))}\n            </Field>\n            <Button type={'submit'} disabled={isSubmitting}>\n              search\n            </Button>\n          </div>\n        </form>\n      )}\n    </Formik>\n  )\n})\n\n//Types\ntype FriendFormType = 'true' | 'false' | 'null'\ntype FormType = {\n  term: string\n  friend: FriendFormType\n}\ntype PropsType = {\n  onFilterChange: (filter: SearchFilterType) => void\n}\n","import React, { useEffect } from 'react'\nimport { User } from './User/User'\nimport { Pagination } from '../../../ui/pagination'\nimport { Typography } from '../../../ui/typography'\nimport { SuperSelect } from '../../../ui/select'\nimport s from './Users.module.scss'\nimport { UserSearchForm } from './UserSearchForm/UserSearchForm'\nimport { useAppDispatch } from '../../../../app/store'\nimport { requestUsers } from '../model/users-reducer'\nimport { searchStringToObject } from 'use-query-params'\nimport { withAuthRedirect } from '../../../../hoc/withAuthRedirect'\nimport { useUsers } from './hooks/useUsers'\n\nconst Users = () => {\n  const dispatch = useAppDispatch()\n  const {\n    users,\n    follow,\n    unFollow,\n    pagesCount,\n    onFilterChange,\n    onPageChanged,\n    onSetPerPage,\n    options,\n    history,\n    setQuery,\n    currentPage,\n    filter,\n    pageSize,\n  } = useUsers()\n\n  useEffect(() => {\n    const parsed = searchStringToObject(history.location.search)\n\n    let actualPage = currentPage\n    let actualFilter = filter\n\n    if (!!parsed.page) actualPage = Number(parsed.page)\n    if (!!parsed.term) actualFilter = { ...actualFilter, term: parsed.term as string }\n\n    switch (parsed.friend) {\n      case 'null':\n        actualFilter = { ...actualFilter, friend: null }\n        break\n      case 'true':\n        actualFilter = { ...actualFilter, friend: true }\n        break\n      case 'false':\n        actualFilter = { ...actualFilter, friend: false }\n        break\n    }\n    dispatch(requestUsers(actualPage, pageSize, actualFilter))\n  }, [])\n\n  useEffect(() => {\n    if (!!filter.term) {\n      setQuery({ term: filter.term })\n    }\n    if (!filter.friend) {\n      setQuery({ friend: String(filter.friend) })\n    }\n    if (currentPage) {\n      setQuery({ page: String(currentPage) })\n    }\n  }, [filter, currentPage])\n\n  const mappedUsers = users.map((u) => <User key={u.id} user={u} followUsers={follow} unFollowUsers={unFollow} />)\n\n  return (\n    <div className={s.usersPageBlock}>\n      <UserSearchForm onFilterChange={onFilterChange} />\n      <div className={s.pagination}>\n        <Pagination count={pagesCount} page={currentPage} onChange={onPageChanged} />\n        <div className={s.showOnPage}>\n          <Typography variant={'body2'}>Показать</Typography>\n          <SuperSelect defaultValue={5} options={options} onValueChange={onSetPerPage} classname={s.selectPagination} />\n          <Typography variant={'body2'}>На странице</Typography>\n        </div>\n      </div>\n      <div className={s.usersBlock}>{mappedUsers}</div>\n    </div>\n  )\n}\n\nexport default withAuthRedirect(Users)\n","import { useAppDispatch, useAppSelector } from '../../../../../app/store'\r\nimport {\r\n  getCurrentPage,\r\n  getOptions,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getUsers,\r\n  getUsersFilter,\r\n} from '../../../../../app/model/selectors/users-selector'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { StringParam, useQueryParams } from 'use-query-params'\r\nimport { followUsers, requestUsers, SearchFilterType, unFollowUsers, userActions } from '../../model/users-reducer'\r\nimport { useCallback } from 'react'\r\n\r\nexport const useUsers = () => {\r\n  const totalUsersCount = useAppSelector(getTotalUsersCount)\r\n  const pageSize = useAppSelector(getPageSize)\r\n  const currentPage = useAppSelector(getCurrentPage)\r\n  const options = useAppSelector(getOptions)\r\n  const users = useAppSelector(getUsers)\r\n  const filter = useAppSelector(getUsersFilter)\r\n  const dispatch = useAppDispatch()\r\n  const history = useHistory()\r\n\r\n  const [_, setQuery] = useQueryParams({\r\n    page: StringParam,\r\n    term: StringParam,\r\n    friend: StringParam,\r\n  })\r\n\r\n  const follow = (userId: number) => dispatch(followUsers(userId))\r\n\r\n  const unFollow = (userId: number) => dispatch(unFollowUsers(userId))\r\n\r\n  const pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n  const onFilterChange = useCallback(\r\n    (filter: SearchFilterType) => {\r\n      dispatch(requestUsers(1, pageSize, filter))\r\n    },\r\n    [pageSize],\r\n  )\r\n  const onPageChanged = (pageNumber: number) => {\r\n    dispatch(requestUsers(pageNumber, pageSize, filter))\r\n  }\r\n  const onSetPerPage = (value: number) => {\r\n    dispatch(userActions.setPerPage(value))\r\n    dispatch(requestUsers(currentPage, value, filter))\r\n  }\r\n\r\n  return {\r\n    users,\r\n    follow,\r\n    unFollow,\r\n    pagesCount,\r\n    onFilterChange,\r\n    onPageChanged,\r\n    onSetPerPage,\r\n    history,\r\n    setQuery,\r\n    options,\r\n    currentPage,\r\n    filter,\r\n    pageSize,\r\n  }\r\n}\r\n"],"names":["getUsers","state","usersReducer","users","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getFollowingInProgress","followingInProgress","getOptions","paginationOptions","getUsersFilter","filter","User","props","user","followUsers","unFollowUsers","useAppSelector","_jsxs","className","s","children","_jsx","NavLink","to","concat","id","src","photos","small","userPhoto","alt","followed","Button","variant","disabled","some","onClick","name","status","range","start","end","length","Array","from","_","idx","DOTS","classNames","root","container","selectBox","select","item","dots","icon","pageButton","selected","clsx","this","Pagination","_ref","onChange","_ref$count","count","_ref$page","page","_usePagination","_paginationRange","_ref$siblings","siblings","paginationRange","useMemo","leftSiblingIndex","Math","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","_toConsumableArray","rightRange","middleRange","lastPage","isFirstPage","isLastPage","handleMainPageClicked","pageNumber","handleNextPageClicked","useCallback","handlePreviousPageClicked","usePagination","PrevButton","MainPaginationButtons","NextButton","Dots","PageButton","_ref2","_ref3","ArrowLeft","_ref4","ArrowRight","_ref5","_Fragment","map","index","isSelected","SuperSelect","label","placeholder","value","onValueChange","defaultValue","options","required","classname","Label","Typography","as","Select","asChild","tabIndex","SelectArrow","position","sideOffset","el","UserSearchForm","memo","onFilterChange","useSelector","Formik","enableReinitialize","initialValues","term","friend","String","onSubmit","values","setSubmitting","handleSubmit","isSubmitting","handleChange","TextField","Field","type","withAuthRedirect","dispatch","useAppDispatch","_useUsers","history","useHistory","_useQueryParams","useQueryParams","StringParam","_useQueryParams2","_slicedToArray","setQuery","pagesCount","ceil","requestUsers","follow","userId","unFollow","onPageChanged","onSetPerPage","userActions","setPerPage","useUsers","useEffect","parsed","searchStringToObject","location","search","actualPage","actualFilter","Number","_objectSpread","mappedUsers","u"],"sourceRoot":""}